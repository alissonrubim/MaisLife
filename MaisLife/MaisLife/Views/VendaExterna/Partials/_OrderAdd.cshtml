@model MaisLife.Models.Adapter.PedidoAdapter
@{
    var outsideClients = (List<MaisLifeModel.Usuario_externo>)ViewBag.OutsideClients;
    var products = (List<MaisLifeModel.Produto>)ViewBag.Products;
    var user = (MaisLifeModel.Usuario)ViewBag.User;
    var sellers = (List<MaisLifeModel.Usuario>)ViewBag.Sellers; 
    var locals = (List<MaisLifeModel.Bairro>) ViewBag.Locals;
    var cart = (MaisLifeModel.Carrinho)ViewBag.Cart;
    var methods = new List<string>();
    methods.Add("Dinheiro");
    methods.Add("Cartão");
   
}
@using (Ajax.BeginForm("CreateOrEditVendaExterna", "VendaExterna", new AjaxOptions()
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "orderTable"
    //LoadingElementId = "divProgress"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })      
        <input type="hidden" name="product-amount" value="0" />
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Cliente:
                </div>
                <div class="form-input">
                    @Html.DropDownListFor(model => model.UsuarioExterno.Idusuario,
                        (outsideClients).Select(option => new SelectListItem
                            {
                                Text = option.Nome,
                                Value = option.Idusuario + ""
                            }),
                            "Novo cliente",
                        new { @class = "form-control" })                    
                </div>                
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                <div class="form-label">
                    Nome:
                </div>
                @Html.EditorFor(model => model.UsuarioExterno.Nome, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nome" } })              
                              
            </div>
        </div>
        <div class="col-lg-2">
            <div class="form-group">
                <div class="form-label">
                    Contato:
                </div>
                @Html.EditorFor(model => model.UsuarioExterno.Telefone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Telefone" } })
            </div>
        </div>
        <div class="col-lg-5">
            <div class="form-group">                
                <div class="form-label">
                    Documento:
                </div>
                @Html.EditorFor(model => model.UsuarioExterno.Documento, new { htmlAttributes = new { @class = "form-control", @placeholder = "CPF ou CNPJ" } })  
            </div>
        </div>  
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Cidade:
                </div>
                <div class="form-input">
                    @Html.EditorFor(model => model.UsuarioExterno.Endereco1.Cidade, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cidade" } })  
                </div>                
            </div>
        </div>
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Bairro:
                </div>
                        @Html.DropDownListFor(model => model.UsuarioExterno.Endereco1.Bairro1.Id,
                            (locals).Select(option => new SelectListItem
                            {
                                Text = option.Nome,
                                Value = option.Id + ""
                            }),
                            "Bairro",
                        new { @class = "form-control" })
                </div>
        </div> 
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Rua:
                </div>
                @Html.EditorFor(model => model.UsuarioExterno.Endereco1.Rua, new { htmlAttributes = new { @class = "form-control", @placeholder = "Rua" } })   
            </div>
        </div> 
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Número:
                </div>
                @Html.EditorFor(model => model.UsuarioExterno.Endereco1.Numero, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nº" } })   
            </div>
        </div>
        <div class="col-lg-12" style="float: left;">
            <div class="form-group" data-id="products">
                <div class="form-label">
                    Produtos:
                </div>
                <div data-id="product-content" class="form-input">
                    <div data-id="product-box" data-content="product-field" class="col-lg-4">
                        <div class="field-box">                            
                            <select class="form-control" data-id="product-select">
                                <option value="0">Produto</option>                                
                                @foreach (var product in products)
                                {
                                    <option value="@product.Id">@product.Nome</option>
                                }
                            </select>
                            <div class="group-input">
                                <input type="text" class="form-control" placeholder="Un" name="product-un" disabled />
                                <input type="text" class="form-control" placeholder="Preço" name="product-price" disabled />
                            </div>
                            <div class="group-input">
                                <input type="number" class="form-control" placeholder="Qtd" name="product-count" min="0" />
                                <input type="text" class="form-control" placeholder="Total" name="product-total" disabled />
                            </div>
                        </div>
                        <div class="field-more">
                            <button type="button" class="btn btn-primary" data-id="more-product"><span class="glyphicon glyphicon-plus"></span></button>
                        </div>
                    </div>


                        @if (Model != null)
                        {
                            foreach (var relationships in cart.Carrinho_produtos)
                            {

                                <div data-content="product-field" class="col-lg-4">
                                    <div class="field-box">                                        
                                        <select class="form-control" data-id="product-select">
                                            <option value="0">Produto</option>
                                            @foreach (var product in products)
                                            {
                                                if ( product.Id == relationships.Produto1.Id ){
                                                    <option value="@product.Id" selected>@product.Nome</option>
                                                }else{
                                                    <option value="@product.Id">@product.Nome</option>
                                                }
                                            }
                                        </select>
                                        <div class="group-input">
                                            <input type="text" class="form-control" placeholder="Un" name="product-un" value="@relationships.Produto1.Unidade" disabled />
                                            <input type="text" class="form-control" placeholder="Preço" name="product-price" value="R$ @relationships.Produto1.Preco" disabled />
                                        </div>
                                        <div class="group-input">
                                            <input type="number" class="form-control" placeholder="Qtd" name="product-count" min="0" value="@relationships.Quantidade" />
                                            <input type="text" class="form-control" placeholder="Total" name="product-total" value="R$ @(relationships.Quantidade * relationships.Produto1.Preco)" disabled />
                                        </div>
                                    </div>
                                    <div class="field-more">
                                        <button type="button" class="btn btn-danger" data-id="remove-product"><span class="glyphicon glyphicon-remove"></span></button>
                                    </div>
                                </div>
                            }
                        }
                   
                </div>
            </div>
        </div> 
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Pagamento:
                </div>                
                <div class="form-input">                                 
                    @Html.DropDownListFor(model => model.Metodo,
                            (methods).Select(option => new SelectListItem
                            {
                                Text = option,
                                Value = option
                            }), new { @class = "form-control" })                    
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Valor a pagar (opcional):
                </div>
                <div class="form-input">
                    @Html.EditorFor(model => model.Pago, new { htmlAttributes = new { @class = "form-control", @placeholder = "Valor a pagar" } })  
                    
                </div>  
            </div>
        </div>         
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Vendedor:
                </div>
                <div class="form-input">                    
                    @if (@user.Permissao < 2)
                    {
                        @Html.DropDownListFor(model => model.Usuario.Id,
                            ((IEnumerable<MaisLifeModel.Usuario>)ViewBag.Sellers).Select(option => new SelectListItem
                            {
                                Text = option.Nome + " " + option.Sobrenome,
                                Value = option.Id + ""
                            }),
                        new { @class = "form-control", @readonly = true })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Usuario.Id,
                            ((IEnumerable<MaisLifeModel.Usuario>)ViewBag.Sellers).Select(option => new SelectListItem
                            {
                                Text = option.Nome + " " + option.Sobrenome,
                                Value = option.Id+""  
                            }),
                            "Vendedor",
                        new { @class = "form-control" })
                    }
                    
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="form-group">
                <div class="form-label">
                    Total:
                </div>
                <div class="form-input">
                    @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control", @placeholder = "Total", @disabled = true } })   
                    
                </div>
            </div>
        </div>                 
                
        <div class="col-lg-11">
            @if (Model != null)
            {
                <button class="btn btn-success panel-submit" type="submit" data-id="panel-submit">Alterar</button>
                <a class="btn btn-default" href="@Url.Action("Index", new { id = 0 })">Voltar</a>
            }
            else
            {
                <button class="btn btn-success panel-submit" type="submit" data-id="panel-submit">Inserir</button>
            }

        </div>

    </div>
}
